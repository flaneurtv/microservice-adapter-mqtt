# This docker-compose.yml is for demonstration purposes. If you run
# docker-compose build && docker-compose up, you will have a local mosquitto
# mqtt server running and a ticker microservice, which is using the
# microservice-adapter-mqtt connected to it, publishing a tick message every
# 3 seconds with topic default/tick. You can e.g. use mqtt-spy to monitor these
# messages.
version: '3'
services:
  mqtt:
    image: eclipse-mosquitto
    ports:
     - "1883:1883"
     - "9001:9001"
    networks:
      - service-network
    volumes:
      - "./examples/conf.d/mosquitto.conf:/mosquitto/config/mosquitto.conf"
    restart: always
  mqtt2:
    image: eclipse-mosquitto
    ports:
     - "1884:1883"
     - "9002:9001"
    networks:
      - service-network
    volumes:
      - "./examples/conf.d/mosquitto.conf:/mosquitto/config/mosquitto.conf"
    restart: always
  microservice-adapter-mqtt:
    depends_on:
      - mqtt
    build: .
    image: flaneurtv/microservice-adapter-mqtt
    environment:
      - "LOG_LEVEL=debug"
      - "NAMESPACE_LISTENER=default"
      - "MQTT_LISTENER_URL=tcp://mqtt:1883"
      - "NAMESPACE_PUBLISHER=default"
      - "MQTT_PUBLISHER_URL=tcp://mqtt:1883"
    networks:
      - service-network
    restart: always
    volumes:
      - ./examples/test-echo/:/srv/test-echo/
  test-sender:
    depends_on:
      - microservice-adapter-mqtt
      - mqtt
    build: ./examples/test-sender
    image: flaneurtv/microservice-test-sender
    environment:
      - "LOG_LEVEL=debug"
      - "NAMESPACE_LISTENER=default"
      - "MQTT_LISTENER_URL=tcp://mqtt:1883"
      - "NAMESPACE_PUBLISHER=default"
      - "MQTT_PUBLISHER_URL=tcp://mqtt:1883"
    networks:
      - service-network
    volumes:
      - ./examples/test-sender/:/srv/test-sender/
    restart: always
  ticker:
    depends_on:
      - microservice-adapter-mqtt
      - mqtt
    build: ./examples/ticker
    image: flaneurtv/microservice-ticker
    environment:
      - "LOG_LEVEL=error"
      - "NAMESPACE_LISTENER=default"
      - "MQTT_LISTENER_URL=tcp://mqtt:1883"
#      - "MQTT_LISTENER_URL=tcp://iot.eclipse.org:1883"
#      - "MQTT_LISTENER_URL=tcp://m20.cloudmqtt.com:13701"
      - "NAMESPACE_PUBLISHER=other"
      - "MQTT_PUBLISHER_URL=tcp://mqtt:1883"
#      - "MQTT_PUBLISHER_URL=tcp://m20.cloudmqtt.com:13701"
#      - "MQTT_PUBLISHER_URL=tcp://iot.eclipse.org:1883"
#    volumes:
#       - ./examples/ticker/schema-tick-hugestring.json:/srv/ticker/schema-tick.json
#      - ./local/mqtt_listener.json:/run/secrets/mqtt_listener.json
#      - ./local/mqtt_publisher.json:/run/secrets/mqtt_publisher.json
    networks:
      - service-network
    restart: always
  tick-responder:
    depends_on:
      - microservice-adapter-mqtt
      - mqtt
    build: ./examples/tick-responder
    image: flaneurtv/microservice-tick-responder
    environment:
      - "LOG_LEVEL=error"
      - "NAMESPACE_LISTENER=other"
      - "MQTT_LISTENER_URL=tcp://mqtt:1883"
#      - "MQTT_LISTENER_URL=tcp://iot.eclipse.org:1883"
#      - "MQTT_LISTENER_URL=tcp://m20.cloudmqtt.com:13701"
      - "NAMESPACE_PUBLISHER=test"
      - "MQTT_PUBLISHER_URL=tcp://mqtt:1883"
#      - "MQTT_PUBLISHER_URL=tcp://m20.cloudmqtt.com:13701"
#      - "MQTT_PUBLISHER_URL=tcp://iot.eclipse.org:1883"
#    volumes:
#      - ./local/mqtt_listener.json:/run/secrets/mqtt_listener.json
#      - ./local/mqtt_publisher.json:/run/secrets/mqtt_publisher.json
    networks:
      - service-network
    restart: always
  error-ticker:
    depends_on:
      - microservice-adapter-mqtt
      - mqtt
    build: ./examples/error-ticker
    image: flaneurtv/microservice-error-ticker
    environment:
      - "LOG_LEVEL=debug"
      - "NAMESPACE_LISTENER=other"
      - "MQTT_LISTENER_URL=tcp://mqtt:1883"
#      - "MQTT_LISTENER_URL=tcp://iot.eclipse.org:1883"
#      - "MQTT_LISTENER_URL=tcp://m20.cloudmqtt.com:13701"
      - "NAMESPACE_PUBLISHER=test"
      - "MQTT_PUBLISHER_URL=tcp://mqtt:1883"
#      - "MQTT_PUBLISHER_URL=tcp://m20.cloudmqtt.com:13701"
#      - "MQTT_PUBLISHER_URL=tcp://iot.eclipse.org:1883"
#    volumes:
#      - ./local/mqtt_listener.json:/run/secrets/mqtt_listener.json
#      - ./local/mqtt_publisher.json:/run/secrets/mqtt_publisher.json
    networks:
      - service-network
    restart: always
  bridge-tick:
    depends_on:
      - microservice-adapter-mqtt
      - mqtt
      - mqtt2
    build: ./examples/bridge-tick
    image: flaneurtv/microservice-bridge-tick
    environment:
      - "LOG_LEVEL=error"
      - "NAMESPACE_LISTENER=other"
      - "NAMESPACE_PUBLISHER=bridged"
      - "MQTT_LISTENER_URL=tcp://mqtt:1883"
#      - "MQTT_LISTENER_URL=tcp://iot.eclipse.org:1883"
#      - "MQTT_LISTENER_URL=tcp://m20.cloudmqtt.com:13701"
      - "MQTT_PUBLISHER_URL=tcp://mqtt2:1883"
#      - "MQTT_PUBLISHER_URL=tcp://m20.cloudmqtt.com:13701"
#      - "MQTT_PUBLISHER_URL=tcp://iot.eclipse.org:1883"
#    volumes:
#      - ./local/mqtt_listener.json:/run/secrets/mqtt_listener.json
#      - ./local/mqtt_publisher.json:/run/secrets/mqtt_publisher.json
    networks:
      - service-network
    restart: always
  bridge-tick-responder:
    depends_on:
      - microservice-adapter-mqtt
      - mqtt
      - mqtt2
    build: ./examples/bridge-tick-responder
    image: flaneurtv/microservice-bridge-tick-responder
    environment:
      - "LOG_LEVEL=error"
      - "NAMESPACE_LISTENER=test"
      - "NAMESPACE_PUBLISHER=bridged"
      - "MQTT_LISTENER_URL=tcp://mqtt:1883"
#      - "MQTT_LISTENER_URL=tcp://iot.eclipse.org:1883"
#      - "MQTT_LISTENER_URL=tcp://m20.cloudmqtt.com:13701"
      - "MQTT_PUBLISHER_URL=tcp://mqtt2:1883"
#      - "MQTT_PUBLISHER_URL=tcp://m20.cloudmqtt.com:13701"
#      - "MQTT_PUBLISHER_URL=tcp://iot.eclipse.org:1883"
#    volumes:
#      - ./local/mqtt_listener.json:/run/secrets/mqtt_listener.json
#      - ./local/mqtt_publisher.json:/run/secrets/mqtt_publisher.json
    networks:
      - service-network
    restart: always
networks:
  service-network:
